{"version":3,"sources":["components/Pagination/Pagination.tsx","App.tsx","utils.ts","index.tsx"],"names":["Pagination","total","perPage","currentPage","onPageChange","totalPagesAmount","Math","ceil","getNumbers","Array","fill","map","__element","index","className","cn","disabled","onClick","href","page","active","items","from","to","numbers","n","push","itemsPerPage","length","App","useState","setPerPage","setCurrentPage","lastItemOnPage","min","firstItemOnPage","filteredItems","slice","onChange","event","target","value","id","htmlFor","item","ReactDOM","render","document","getElementById"],"mappings":"kNAUaA,EAAwC,SAAC,GAE/C,IADLC,EACI,EADJA,MAAOC,EACH,EADGA,QAASC,EACZ,EADYA,YAAaC,EACzB,EADyBA,aAEvBC,EAAmBC,KAAKC,KAAKN,EAAQC,GACrCM,EAAa,IAAIC,MAAMJ,GAAkBK,KAAK,GACjDC,KAAI,SAACC,EAAWC,GAAZ,OAAsBA,EAAQ,KAErC,OACE,qBAAIC,UAAU,aAAd,UACE,oBAAIA,UAAWC,IAAG,YAAa,CAAEC,SAA0B,IAAhBb,IAA3C,SACE,mBACEc,QAAS,WACPb,EAA6B,IAAhBD,EAAoB,EAAIA,EAAc,IAErD,UAAQ,WACRW,UAAU,YACVI,KAAK,QACL,gBAA+B,IAAhBf,EAPjB,oBAYDK,EAAWG,KAAI,SAAAQ,GAAI,OAClB,oBAEEL,UAAWC,IAAG,YACZ,CAAEK,OAAQjB,IAAgBgB,IAH9B,SAKE,mBACEF,QAAS,WACPb,EAAae,IAEf,UAAQ,WACRL,UAAU,YACVI,KAAI,WAAMC,GANZ,SAQGA,KAZEA,MAiBT,oBAAIL,UAAWC,IAAG,YAChB,CAAEC,SAAUb,IAAgBE,IAD9B,SAGE,mBACEY,QAAS,WACPb,EAAaD,IAAgBE,EACzBA,EAAmBF,EAAc,IAEvC,UAAQ,WACRW,UAAU,YACVI,KAAK,QACL,gBAAef,IAAgBE,EARjC,wBChDR,IAAMgB,ECNC,SAAoBC,EAAcC,GAGvC,IAFA,IAAMC,EAAU,GAEPC,EAAIH,EAAMG,GAAKF,EAAIE,GAAK,EAC/BD,EAAQE,KAAKD,GAGf,OAAOD,EDDKhB,CAAW,EAAG,IACzBG,KAAI,SAAAc,GAAC,qBAAYA,MAEdE,EAAyB,CAAC,IAAK,IAAK,KAAM,MAE1C1B,EAAQoB,EAAMO,OAEPC,EAAgB,WAC3B,MAA8BC,mBAAS,GAAvC,mBAAO5B,EAAP,KAAgB6B,EAAhB,KACA,EAAsCD,mBAAS,GAA/C,mBAAO3B,EAAP,KAAoB6B,EAApB,KACMC,EAAiB3B,KAAK4B,IAAI/B,EAAcD,EAASD,GACjDkC,GAAoBhC,EAAc,GAAKD,EAAW,EAClDkC,EAAgBf,EAAMgB,OAAOlC,EAAc,GAC/CD,EAASC,EAAcD,GAEzB,OACE,sBAAKY,UAAU,YAAf,UACE,uDAEA,mBAAGA,UAAU,OAAO,UAAQ,OAA5B,wBACWX,EADX,mBACiCgC,EADjC,cACsDF,EADtD,eAC2EhC,EAD3E,OAGA,sBAAKa,UAAU,iBAAf,UACE,qBAAKA,UAAU,0BAAf,SACE,wBACEwB,SAAU,SAACC,GACTR,GAAYQ,EAAMC,OAAOC,OACzBT,EAAe,IAEjBS,MAAOvC,EACP,UAAQ,kBACRwC,GAAG,kBACH5B,UAAU,eARZ,SAUGa,EAAahB,KAAI,SAAA8B,GAAK,OACrB,wBAEEA,MAAOA,EAFT,SAIGA,GAHIA,UASb,uBAAOE,QAAQ,kBAAkB7B,UAAU,qBAA3C,+BAIF,cAAC,EAAD,CACEb,MAAOA,EACPC,QAASA,EACTC,YAAaA,EACbC,aAAc4B,IAEhB,6BACGI,EAAczB,KAAI,SAACiC,GAAD,OACjB,oBAAI,UAAQ,OAAZ,SAA+BA,GAAPA,YE5DlCC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.ecdb181c.chunk.js","sourcesContent":["import React from 'react';\nimport cn from 'classnames';\n\ninterface PaginationProps {\n  total: number;\n  perPage: number;\n  currentPage: number;\n  onPageChange: (page: number) => void;\n}\n\nexport const Pagination: React.FC<PaginationProps> = ({\n  total, perPage, currentPage, onPageChange,\n}) => {\n  const totalPagesAmount = Math.ceil(total / perPage);\n  const getNumbers = new Array(totalPagesAmount).fill(0)\n    .map((__element, index) => index + 1);\n\n  return (\n    <ul className=\"pagination\">\n      <li className={cn('page-item', { disabled: currentPage === 1 })}>\n        <a\n          onClick={() => {\n            onPageChange(currentPage === 1 ? 1 : currentPage - 1);\n          }}\n          data-cy=\"prevLink\"\n          className=\"page-link\"\n          href=\"#prev\"\n          aria-disabled={currentPage === 1}\n        >\n          «\n        </a>\n      </li>\n      {getNumbers.map(page => (\n        <li\n          key={page}\n          className={cn('page-item',\n            { active: currentPage === page })}\n        >\n          <a\n            onClick={() => {\n              onPageChange(page);\n            }}\n            data-cy=\"pageLink\"\n            className=\"page-link\"\n            href={`#${page}`}\n          >\n            {page}\n          </a>\n        </li>\n      ))}\n\n      <li className={cn('page-item',\n        { disabled: currentPage === totalPagesAmount })}\n      >\n        <a\n          onClick={() => {\n            onPageChange(currentPage === totalPagesAmount\n              ? totalPagesAmount : currentPage + 1);\n          }}\n          data-cy=\"nextLink\"\n          className=\"page-link\"\n          href=\"#next\"\n          aria-disabled={currentPage === totalPagesAmount}\n        >\n          »\n        </a>\n      </li>\n    </ul>\n  );\n};\n","import React, { useState } from 'react';\nimport './App.css';\nimport { Pagination } from './components/Pagination';\nimport { getNumbers } from './utils';\n\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nconst items = getNumbers(1, 42)\n  .map(n => `Item ${n}`);\n\nconst itemsPerPage: string[] = ['3', '5', '10', '20'];\n\nconst total = items.length;\n\nexport const App: React.FC = () => {\n  const [perPage, setPerPage] = useState(5);\n  const [currentPage, setCurrentPage] = useState(1);\n  const lastItemOnPage = Math.min(currentPage * perPage, total);\n  const firstItemOnPage = ((currentPage - 1) * perPage) + 1;\n  const filteredItems = items.slice((currentPage - 1)\n  * perPage, currentPage * perPage);\n\n  return (\n    <div className=\"container\">\n      <h1>Items with Pagination</h1>\n\n      <p className=\"lead\" data-cy=\"info\">\n        {`Page ${currentPage} (items ${firstItemOnPage} - ${lastItemOnPage} of ${total})`}\n      </p>\n      <div className=\"form-group row\">\n        <div className=\"col-3 col-sm-2 col-xl-1\">\n          <select\n            onChange={(event) => {\n              setPerPage(+event.target.value);\n              setCurrentPage(1);\n            }}\n            value={perPage}\n            data-cy=\"perPageSelector\"\n            id=\"perPageSelector\"\n            className=\"form-control\"\n          >\n            {itemsPerPage.map(value => (\n              <option\n                key={value}\n                value={value}\n              >\n                {value}\n              </option>\n            ))}\n          </select>\n        </div>\n\n        <label htmlFor=\"perPageSelector\" className=\"col-form-label col\">\n          items per page\n        </label>\n      </div>\n      <Pagination\n        total={total}\n        perPage={perPage}\n        currentPage={currentPage}\n        onPageChange={setCurrentPage}\n      />\n      <ul>\n        {filteredItems.map((item) => (\n          <li data-cy=\"item\" key={item}>{item}</li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default App;\n","export function getNumbers(from: number, to: number): number[] {\n  const numbers = [];\n\n  for (let n = from; n <= to; n += 1) {\n    numbers.push(n);\n  }\n\n  return numbers;\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}